{"version":3,"sources":["logo.svg","testTodo.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableDisplay","data","onDelete","onUpdate","Paper","Table","TableHead","color","TableRow","TableCell","TableBody","map","dt","id","title","desc","onClick","handleUpdate","Update","style","marginRight","Delete","AddTodo","onTodoAdd","dialog","t","d","useState","dialogOpen","setDialogOpen","setTitle","setDesc","onDialogClosed","Button","variant","float","endIcon","Add","Dialog","open","onClose","DialogTitle","DialogContent","TextField","value","onChange","e","target","fullWidth","margin","label","DialogActions","useStyle","makeStyles","theme","drawer","width","marginLeft","paper","root","display","page","padding","spacing","active","backgroundColor","TestTodo","todos","setTodos","setOpen","updateTodo","useLayoutEffect","items","text","icon","SubjectOutlined","AddCircleOutlineOutlined","classes","className","Drawer","anchor","Typography","List","it","ListItem","button","ListItemIcon","ListItemText","primary","todo","length","onUpdateTodo","myTodos","index","findIndex","td","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,I,kPCKTA,EAAe,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAUnC,OACI,8BACI,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,2BAGR,cAACC,EAAA,EAAD,UACKT,EAAKU,KAAI,SAAAC,GAAE,OACR,eAACJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAYG,EAAGC,KACf,cAACJ,EAAA,EAAD,UAAYG,EAAGE,QACf,cAACL,EAAA,EAAD,UAAYG,EAAGG,OACf,eAACN,EAAA,EAAD,WACI,sBAAMO,QAAS,kBAvBtB,SAACJ,GAClBT,EAASS,GAsBkCK,CAAaL,IAAhC,SAAqC,cAACM,EAAA,EAAD,CAAQC,MAAO,CAACZ,MAAM,QAASa,YAAY,YAChF,sBAAMJ,QAAS,kBA5BvBH,EA4BwCD,EAAGC,QA3B3DX,EAASW,GADM,IAACA,GA4BQ,SAAwC,cAACQ,EAAA,EAAD,CAAQd,MAAM,qBAN/CK,EAAGC,iBAiBpCS,EAAU,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAUC,EAAqB,EAArBA,OAAqB,IAAdC,SAAc,MAAZ,GAAY,MAARC,SAAQ,MAAN,GAAM,EAC7C,EAAoCC,mBAASH,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAASF,GAAnC,mBAAOX,EAAP,KAAcgB,EAAd,KACA,EAAwBH,mBAASD,GAAjC,mBAAOX,EAAP,KAAagB,EAAb,KAIMC,EAAiB,kBAAIH,GAAc,IAOzC,OACI,eAAC,WAAD,WACI,cAACI,EAAA,EAAD,CACAjB,QAZa,kBAAIa,GAAc,IAa/BK,QAAQ,YACRf,MAAO,CAACgB,MAAM,SACd5B,MAAM,UACN6B,QAAS,cAACC,EAAA,EAAD,IALT,sBASA,eAACC,EAAA,EAAD,CAAQC,KAAMX,EAAYY,QAASR,EAAnC,UACI,cAACS,EAAA,EAAD,uBAGA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAO9B,EAAO+B,SAAU,SAAAC,GAAC,OAAEhB,EAASgB,EAAEC,OAAOH,QAAQI,WAAS,EAACC,OAAO,SAASC,MAAM,UAChG,cAACP,EAAA,EAAD,CAAWC,MAAO7B,EAAM8B,SAAU,SAAAC,GAAC,OAAEf,EAAQe,EAAEC,OAAOH,QAAQI,WAAS,EAACC,OAAO,SAASC,MAAM,mBAElG,eAACC,EAAA,EAAD,WACI,cAAClB,EAAA,EAAD,CAAQ1B,MAAM,UAAUS,QAASgB,EAAjC,oBACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY3B,MAAM,UAAUS,QA1B3C,WACbO,EAAU,CAACT,MAAOA,EAAOC,KAAMA,IAC/BiB,KAwBY,8BAQdoB,EAAWC,aAAW,SAACC,GAAD,MAAU,CAClCC,OAAQ,CACJC,MAAO,IACPC,WAAY,IAEhBC,MAAM,CACFF,MAAO,KAEXG,KAAK,CACDC,QAAS,QAEbC,KAAK,CACDL,MAAO,OACPM,QAASR,EAAMS,QAAQ,IAE3BC,OAAQ,CACJC,gBAAgB,QAEpBnD,MAAM,CACFgD,QAASR,EAAMS,QAAQ,GACvBE,gBAAgB,OAChB1D,MAAO,YAyEA2D,EArEE,WAGb,MAA0BvC,mBAAS,CAC/B,CAACd,GAAI,EAAGC,MAAO,gBAAiBC,KAAM,8BACtC,CAACF,GAAI,EAAGC,MAAO,iBAAkBC,KAAM,+BACvC,CAACF,GAAI,EAAGC,MAAO,gBAAiBC,KAAM,gCAH1C,mBAAOoD,EAAP,KAAcC,EAAd,KAKA,EAAwBzC,oBAAS,GAAjC,mBAAOY,EAAP,KAAa8B,EAAb,KAYMC,EAAa,SAAA5C,GACf2C,GAAQ,IAGZE,2BAAgB,cACd,CAAChC,IAEH,IAAMiC,EAAQ,CACV,CACIC,KAAM,WACNC,KAAM,cAACC,EAAA,EAAD,CAAiBpE,MAAM,eAEjC,CACIkE,KAAM,cACNC,KAAM,cAACE,EAAA,EAAD,CAA0BrE,MAAM,gBAIxCsE,EAAUzB,IAChB,OACI,sBAAK0B,UAAWD,EAAQlB,KAAxB,UACI,cAACoB,EAAA,EAAD,CACID,UAAYD,EAAQtB,OACpBrB,QAAQ,YACR8C,OAAS,OACTH,QAAS,CAACnB,MAAOmB,EAAQnB,OAJ7B,SAMI,gCACI,cAACuB,EAAA,EAAD,CAAYH,UAAWD,EAAQ/D,MAA/B,yBAEA,cAACoE,EAAA,EAAD,UACKV,EAAM7D,KAAI,SAACwE,GAAD,OACP,eAACC,EAAA,EAAD,CAAwBC,QAAM,EAACP,UAAWD,EAAQb,OAAlD,UACI,cAACsB,EAAA,EAAD,UAAeH,EAAGT,OAClB,cAACa,EAAA,EAAD,CAAcC,QAASL,EAAGV,SAFfU,EAAGV,gBASlC,sBAAKK,UAAWD,EAAQhB,KAAxB,UACI,cAAC,EAAD,CAASpC,EAAE,YAAYD,OAAQe,EAAMb,EAAI,gBAAgBH,UApDnD,SAACkE,GACfrB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACtD,GAAGsD,EAAMuB,OAAO,EAAIvB,EAAMA,EAAMuB,OAAO,GAAG7E,GAAK,EAAG,EAAGC,MAAO2E,EAAK3E,MAAOC,KAAK0E,EAAK1E,UAmDhB4E,aAAcrB,IAC7F,cAAC,EAAD,CAAcrE,KAAMkE,EAAOjE,SAjDpB,SAACW,GAClB,IAAM+E,EAAO,YAAOzB,GACd0B,EAAQD,EAAQE,WAAU,SAAAC,GAAE,OAAEA,EAAGlF,KAAOA,KAC9C+E,EAAQI,OAAOH,EAAM,GACrBzB,EAASwB,IA6CkDzF,SAAUmE,WCrK5D2B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.97f87d70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper, Table, TableBody, TableCell, TableHead, TableRow, TextField, Typography } from \"@material-ui/core\";\r\nimport { Add, AddCircleOutlineOutlined, Delete, SubjectOutlined, Update } from \"@material-ui/icons\";\r\nimport { Fragment, useLayoutEffect, useState } from \"react\";\r\n\r\n\r\nconst TableDisplay = ({data, onDelete, onUpdate})=>{\r\n\r\n    const handleDelete=(id)=>{\r\n        onDelete(id);\r\n    }\r\n\r\n    const handleUpdate = (dt)=>{\r\n        onUpdate(dt);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper>\r\n            <Table>\r\n                <TableHead color=\"primary\">\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                        <TableCell>Options</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.map(dt=>(\r\n                        <TableRow key={dt.id}>\r\n                            <TableCell>{dt.id}</TableCell>\r\n                            <TableCell>{dt.title}</TableCell>\r\n                            <TableCell>{dt.desc}</TableCell>\r\n                            <TableCell>\r\n                                <span onClick={()=>handleUpdate(dt)}><Update style={{color:\"green\", marginRight:\"25px\"}} /></span>\r\n                                <span onClick={()=>handleDelete(dt.id)}><Delete color=\"secondary\"/></span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddTodo = ({onTodoAdd,dialog,t=\"\", d=\"\"})=>{\r\n    const [dialogOpen, setDialogOpen] = useState(dialog);\r\n    const [title, setTitle] = useState(t)\r\n    const [desc, setDesc] = useState(d)\r\n\r\n    const onDialogOpen = ()=>setDialogOpen(true)\r\n\r\n    const onDialogClosed = ()=>setDialogOpen(false)\r\n\r\n    const onCreate = ()=>{\r\n        onTodoAdd({title: title, desc: desc})\r\n        onDialogClosed()\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Button \r\n            onClick={onDialogOpen}\r\n            variant=\"contained\" \r\n            style={{float:\"right\"}}\r\n            color=\"primary\" \r\n            endIcon={<Add/>}>\r\n                Add Todo\r\n            </Button>\r\n            \r\n            <Dialog open={dialogOpen} onClose={onDialogClosed}>\r\n                <DialogTitle>\r\n                    New Todo \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField value={title} onChange={e=>setTitle(e.target.value)} fullWidth margin=\"normal\" label=\"Title\"/>\r\n                    <TextField value={desc} onChange={e=>setDesc(e.target.value)} fullWidth margin=\"normal\" label=\"description\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"primary\" onClick={onDialogClosed}>Cancel</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onCreate}>Create</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n    drawer: {\r\n        width: 240,\r\n        marginLeft: 20,\r\n    },\r\n    paper:{\r\n        width: 240\r\n    },\r\n    root:{\r\n        display: \"flex\"\r\n    },\r\n    page:{\r\n        width: \"100%\",\r\n        padding: theme.spacing(4)\r\n    },\r\n    active: {\r\n        backgroundColor:\"#eff\"\r\n    },\r\n    title:{\r\n        padding: theme.spacing(3),\r\n        backgroundColor:\"#000\",\r\n        color: \"#fff\"\r\n    }\r\n}))\r\n\r\nconst TestTodo = ()=>{\r\n\r\n\r\n    const [todos, setTodos] = useState([\r\n        {id: 1, title: \"my first todo\", desc: \"Some first description of \"},\r\n        {id: 2, title: \"my second todo\", desc: \"Some second description of \"},\r\n        {id: 3, title: \"my third todo\", desc: \"Some third description of \"}\r\n    ]);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleAdd = (todo)=>{\r\n        setTodos([...todos, {id:todos.length>0 ? todos[todos.length-1].id + 1: 1, title: todo.title, desc:todo.desc}])\r\n    }\r\n\r\n    const deleteTodo = (id)=>{\r\n      const myTodos = [...todos];\r\n      const index = myTodos.findIndex(td=>td.id === id)\r\n      myTodos.splice(index,1)\r\n      setTodos(myTodos)\r\n    }\r\n    const updateTodo = d=>{\r\n        setOpen(true)\r\n    }\r\n\r\n    useLayoutEffect(()=>{\r\n    },[open]);\r\n\r\n    const items = [\r\n        {\r\n            text: \"My Todos\",\r\n            icon: <SubjectOutlined color=\"secondary\"/>\r\n        },\r\n        {\r\n            text: \"Create Todo\",\r\n            icon: <AddCircleOutlineOutlined color=\"secondary\"/>\r\n        }\r\n    ]\r\n    \r\n    const classes = useStyle()\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer\r\n                className= {classes.drawer}\r\n                variant=\"permanent\"\r\n                anchor = \"left\"\r\n                classes={{paper: classes.paper}}\r\n                >\r\n                <div>\r\n                    <Typography className={classes.title}>My Todo App</Typography>\r\n\r\n                    <List>\r\n                        {items.map((it)=>(\r\n                            <ListItem key={it.text} button className={classes.active}>\r\n                                <ListItemIcon>{it.icon}</ListItemIcon>\r\n                                <ListItemText primary={it.text }/>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div className={classes.page}>\r\n                <AddTodo t=\"sdfdsfdfs\" dialog={open} d = \"ffdsfsdfsdfdf\" onTodoAdd={handleAdd} onUpdateTodo={updateTodo} />\r\n                <TableDisplay data={todos} onDelete={deleteTodo} onUpdate={updateTodo} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestTodo;","import logo from './logo.svg';\nimport './App.css';\nimport TestTodo from './testTodo';\n\nfunction App() {\n  return (\n    <div>\n      <TestTodo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}